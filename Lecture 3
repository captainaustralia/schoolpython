Сегодня нужно разобрать циклы, for / while
Цикл for , часто называют, циклом перебора. Мы разобрали его на занятии, давайте напомню

for i in range(10):
  print(i)

* Напишет числа от 0 до 9, держим в голове что промежуток тут [0,10) , значит 10 не включается в наш диапазон

Где еще можем воспользоваться?
Например нам нужно перебрать все элементы из массива, для этого есть 2 способа:
Для начала создадим тестовый массив

test_array = ['asd','1',2,'$$$']

1) for i in range(len(test_array)):
      print(test_array[i])
* Напомню, что за такая функция len(), как легко вспомнить, я говорил, пользуемся тогда, когда ЛЕНЬ СЧИТАТЬ!

2) for i in test_array:
      print(i)
* В данном случае, взяли и напрямую обратились к массиву, не используя итератор "i".


Цикл while , используется тогла, когда нам необходимо какое-то сложное условие

Мы можем сделать цикл while, с функциональностью цикла for.
Что делает цикл for? Он увеличивает определенный вами итератор на +1, за каждую итерацию
Попробуем:

i = 0 
while i < 10:
  print(i)
  i += 1
  
* В данном цикле while мы описываем то, как работает цикл for.
* В 30 строчке создаем итератор, который будет изменяться в цикле на +1
* В 31 строчке мы говорим, пока i < 10 тело цикла будет выполняться
* В 32 строчке печатаем элемент i 
* В 33 увеличиваем элемент на +1
* Т.е по своей сути, это тоже самое что и for i in range(10): print(i)

Как еще можно воспользоваться циклом while?
"Бесконечный" цикл, с помощью True

while True:
  print('aaa')
*Бесконечно будет писать ааа

Как его прекратить?
- Вспоминаем про ключевое слово или, как говорил Дима "Тормоза"

i = 0
while True:
  if i == 100:
      print('Все , тормози, мы дошли до 100!')
      break
  else:
      print(i)
      i += 1
      
  * Итак если i = 100, мы зайдем в 55 и 56 строку и прекратим наш цикл
 
 *** Методы для массивов ***
1) .append('что-то , что нужно добавить') - метод добавит в конец массива , элемент который записан в скобках
2) .insert(pos_number, ' что-то, что нужно добавить) - метод добавит в определенное место( место = pos_number , pos_number - какое-то место в массиве),
элемент записаный в скобках
3) .pop() - удалит последний элемент в массиве
* Не забываем, что можем сохранить этот элемент , например save_num = test_array.pop()
4) .remove('Viktor') - удалит имя 'Viktor' из массива
* Если имя - 'Viktor' встречается более 1 раза, нужно вызывать этот метод множество раз. Т.е 1 применение = 1 удалению.
5) если нужно удалить весь массив , пишем del name_array




Задачи для решения дома:
1) Напишите программу, которая считывает два целых числа А и B и выводит наибольшее значение из них

2) Даны два целых числа. Программа должна вывести число "1", если первое число больше второго, число "2", если второе больше первого или число "0", если они равны.

3) За многие годы заточения узник замка Иф проделал в стене прямоугольное отверстие размером D×E. Замок Иф сложен из кирпичей, размером A×B×C. 
Определите, сможет ли узник выбрасывать кирпичи в море через это отверстие (очевидно, стороны кирпича должны быть параллельны сторонам отверстия).

* Сначала пишите код в IDE PyCharm, затем , если считаете , что выполнили задание верно, отправляете код в свой репозиторий на GitHub
* Код будет проверен, за день до следующего занятия,(6 апреля) результаты будут в графе оценка за Д/З, а также объявлены на занятии
* Напоминаю, что команда , при помощи которой мы можем ввести что-либо с клавиатуры - input() -> превратит все в тип - STRING, для этого нужно преобразовать в int
* int(input())
* Как закинуть свой код в репозиторий, чтобы я проверил? -> Смотрим в телеграм
P.S Не нужно гуглить или списывать друг у друга, во всём нужно разбираться самостоятельно, а если не сумели решить, то объясню на занятии.
Помните , что вы пришли - учиться :)


