Возможно вы слышали , что есть объектно-ориентированные языки программирования, так вот пайтон один из них, но что это значит?
Это значит, что все в Python является объектами, а что же такое объект?
А объект это экземпляр класса, а это что такое?
Для ответа на этот вопрос, мы изучим классы.
На самом деле многие из них мы уже изучали, например int/float/string/boolean/list/tuple/dict, они именуются не только, как типы данных, но и как классы

Пока ничего не понятно. Давайте разбираться.
Например мы создаем какую-нибудь игру, кс-го /танки/ доту и.тд . Когда мы выбираем какой-то юнит в игре, мы и не подозреваем, что где-то внутри игры (под капотом)
мы выбираем определенный класс. Но чтобы как-то выбрать этот класс, нужно чтобы он был создан, простыми словами программисты, которые пишут игры, создавая персонажа
создают определенный класс, чтобы объяснить компьютеру - "чувак, я создал класс , который называется человек, у него есть свои методы, например метод - ходить и метод стрелять"

Думаю, что до сих пор ничего не понятно :)
Давайте создадим класс человека:
- Чтобы создать класс нужно написать ключевое слово, затем название класса (! С большой буквы),скобки , а затем писать тело класса:

class Human():
    ## Теперь, я буду писать комментарии внутри, чтобы пояснять шаг за шагом
    def __init__(self,name,age,gender):
    ### В верхней строчке, мы создаем функцию __init__ в которую передаем аргументы self/name/age/gender
    ### Что такое self, пока упустим. А следующие атрибуты : имя,возраст,пол
    ### Зачем нужна эта функция? Она нужна для того, чтобы мы могли объяснить питону, что мы создаем ОБЪЕКТ класса HUMAN, с определенными атрибутами NAME/AGE/GENDER
        self.name = name
        self.age = age
        self.gender = gender
    ### 3 верхние строчки говорят, что когда мы создадим класс и передадим ему имя,возраст и пол, мы обязуемся присвоить их данному ОБЪЕКТУ
    
 - До сих пор не понятно? Сейчас все поменяется. 
 Представьте , что вы находитесь в главном меню и вам предлагается выбрать персонажа, дать ему имя, возраст и выбрать пол, сейчас мы сделаем то же самое, только
 отличие в том, что вы создаете игру, точнее вы создаете , то что нужно будет выбирать человеку, который будет играть в вашу игру, чтобы создать персонажа
 
 *Теперь создадим ОБЪЕКТ класса HUMAN. Но для начала я поясню, почему я постоянно выделяю слово ОБЪЕКТ. Объектом называется экземпляр класса, т.е сейчас мы создадим
 конкретного чувака
 
 my_hero = Human('Chack Noris',65,'Male')
 Что мы сделали? Мы создали объект нашего класса человека, имя которого - Чак Норис, возраст - 65, и он мужского пола
 
 *Попробуем посмотреть, что там хранится в переменной my_hero
 print(my_hero)
 >>> <__main__.Human object at 0x0000021BCD867970>
 оп, что это такое ? object at 0x0000021BCD867970 -> это ячейка памяти, в которой хранится наш объект
 И если мы хотим узнать, как зовут нашего героя, сколько ему лет или какого он пола, мы должны обратиться к АТРИБУТАМ класса
 Атрибуты - это данные, которые мы определяем в функции __init__ ( строчка 18 ). Это грубо говоря , когда нас боженька создавал он сказал, так у чуваков
 будет возраст, будет имя, будет 2 пола, либо мужик , либо девушка, а потом может я еще че придумаю.
 
Чтобы все таки обратиться к объекту, который мы создали и узнать все о его атрибутах, мы должны написать вот так:
print(my_hero.name)
print(my_hero.age)
print(my_hero.gender)

>>> Chack Noris
>>> 65
>>> Male

Тут должно быть понятно, попробуйте посоздавать еще каких-нибудь героев, добавить им атрибутов

Теперь продолжим, вот боженька или кто-то там подумал и сказал, ну давайте теперь эти чуваки смогут ходить, говорить, сидеть, плакать и.тд ,
вот это все называется МЕТОДАМИ КЛАССА
Метод - это функция определенная только для данного класса.

Теперь внутри нашего класса( мы должны вернуть в тело класса, который написан выше), напишем метод, который будет увеличивать возраст нашего персонажа на 1, 
типо дня рождения, и еще что-нибудь

.... продолжаем внутри класса
    
    def happy_birthday(self):
        self.age += 1
        print('У', self.name, ' сегодня день рождения, и ему стукнуло', self.age,' лет')
  
  теперь давайте воспользуемся, представим , что у Чака сегодня день рождения
  
  my_hero.happy_birthday()
  >>> У Chack Noris  сегодня день рождения, и ему стукнуло 66  лет
  
*** Дз, создать класс машины с атрибутами название/год выпуска/ страна выпуска / количество бензина/объем бака.
А также метод, заправки машины, в котором вы увеличиваете количество бензина например на 10 литров. Если объем бака меньше, чем количество топлива, которое получится в результате
вы должны выдать сообщение, что машина переполнена бензином
 
